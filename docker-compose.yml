version: '3.9'
services:

  postgres:
    image: postgres:13.3
    container_name: postgres
    environment:
      POSTGRES_DB: "demo"
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "root"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - .:/var/lib/postgresql/data
    ports:
      - "5438:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - demo-network

  exporter:
    depends_on:
      - postgres
    image: wrouesnel/postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://root:root@postgres:5432/demo?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - demo-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus-grafana/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - demo-network


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - ./prometheus-grafana/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./prometheus-grafana/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml
    ports:
      - "3000:3000"
    links:
      - prometheus
    networks:
      - demo-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: monitoring_node_exporter
    restart: unless-stopped
    expose:
      - "9100"
    networks:
      - demo-network

  demo-app:
    depends_on:
      postgres:
        condition: service_healthy
    build: .
    ports:
      - "8081:8081"
      - "8082:8082"

networks:
  demo-network:
    name: demo-network